Ideas for v 1.2.
    Hall of fame - all timers, given year
    

Ideas for v 2.0
    Messagaging with results, update's if smb overtook you/ long inactive, etc (a monthtly mail?) - need to collect mails (newsletter)
    Individual athlete page (month by month graph, ranking current and month by month, stacked graph, photo, runrate for 5k) - cookie based
    Permament update of data from Strava (store credentials in database)
    Comments Forms (dicusion/ updates)
    How to make it readible with 30+/100+ participants?
    Stock monthly updates and do not re-download them

Ideas for v 3.0
    Make an adroid/iphone application
    Make a topx prizes for achieving results? (shirts, bike shirts, diplomas, beer, meeting)?

PARKING:
    A month by month graph - DISCARDED ( - it might be ok for an indivitual atheete)
    A stacked graph/ make graph more legible on small screen - DISCARDED for totals (not legible) - might be ok for individual graphs
    Fixes: detect phone resolution and change the font sizes to large, and keep em smaller for PCs - discarded, as phone seems to be primary source

Przelicznik (80kg):
1h bieganie (9km/h) distance = 9km, 760kcal,
1h rowerem (24km/h) distance = 24km, 800kcal
1h spacerem (5km/h) distance = 5km, 280kcal
1h jazda na nartach (40km/h), distance = 40km, 580kcal
1h p≈Çywania (4km/h), distance = 4km, 664kcal


Release v 1.10
Fixes: larger right margin, still larger fonts, menu bar with white shadow - DONE
?km multiplier by sport (weighted by calories? KJ) ?
Fixes: VirtualRide

Release v 1.11
    Download athlete pictures and show them on webpage (how?/where?) - DONE
    Counter - total number of paricipants and number of a given one - DONE
    Favicon - implement - DONE

Release v 1.12
    Store athlete Id & name in session. Session validity set to 1 year.
    Highlight current athlete with red font
    Highlight current athlete with red border on graphs
    Highlight athletes with 5000K+ with green bar on graph
    Changed menu font letters to white
    Added strava buttons & powered by Strava

Release v1.13
    Fixes: Hike (activity name to be added) 
    Fixes: Take out the left side bar - done
    Fixes: confirmation page button formatting change - done
    Fixes: minor layout fixed - menu Bar, h1 on confirrmation page, size of connect strava button




BACKUP of /var/www/www_y5k_fun_wsgi.py:

# This file contains the WSGI configuration required to serve up your
# web application at http://www.y5k.fun/
# It works by setting the variable 'application' to a WSGI handler of some
# description.
#

# +++++++++++ GENERAL DEBUGGING TIPS +++++++++++
# getting imports and sys.path right can be fiddly!
# We've tried to collect some general tips here:
# https://help.pythonanywhere.com/pages/DebuggingImportError


# +++++++++++ HELLO WORLD +++++++++++
# A little pure-wsgi hello world we've cooked up, just
# to prove everything works.  You should delete this
# code to get your own working.


HELLO_WORLD = """<html>
<head>
    <title>PythonAnywhere hosted web application</title>
</head>
<body>
<h1>Hello, World!</h1>
<p>
    This is the default welcome page for a
    <a href="https://www.pythonanywhere.com/">PythonAnywhere</a>
    hosted web application.
</p>
<p>
    Find out more about how to configure your own web application
    by visiting the <a href="https://www.pythonanywhere.com/web_app_setup/">web app setup</a> page
</p>
</body>
</html>"""


def application(environ, start_response):
    if environ.get('PATH_INFO') == '/':
        status = '200 OK'
        content = HELLO_WORLD
    else:
        status = '404 NOT FOUND'
        content = 'Page not found.'
    response_headers = [('Content-Type', 'text/html'), ('Content-Length', str(len(content)))]
    start_response(status, response_headers)
    yield content.encode('utf8')


# Below are templates for Django and Flask.  You should update the file
# appropriately for the web framework you're using, and then
# click the 'Reload /yourdomain.com/' button on the 'Web' tab to make your site
# live.

# +++++++++++ VIRTUALENV +++++++++++
# If you want to use a virtualenv, set its path on the web app setup tab.
# Then come back here and import your application object as per the
# instructions below


# +++++++++++ CUSTOM WSGI +++++++++++
# If you have a WSGI file that you want to serve using PythonAnywhere, perhaps
# in your home directory under version control, then use something like this:
#
#import sys
#
#path = '/home/standard20000/path/to/my/app
#if path not in sys.path:
#    sys.path.append(path)
#
#from my_wsgi_file import application  # noqa


# +++++++++++ DJANGO +++++++++++
# To use your own django app use code like this:
import os
import sys
#
## assuming your django settings file is at '/home/standard20000/mysite/mysite/settings.py'
## and your manage.py is is at '/home/standard20000/mysite/manage.py'
path = '/home/standard20000/Y5K-webpage'
if path not in sys.path:
    sys.path.append(path)

os.environ['DJANGO_SETTINGS_MODULE'] = 'StravaApp.settings'

# then:
from django.core.wsgi import get_wsgi_application
application = get_wsgi_application()



# +++++++++++ FLASK +++++++++++
# Flask works like any other WSGI-compatible framework, we just need
# to import the application.  Often Flask apps are called "app" so we
# may need to rename it during the import:
#
#
#import sys
#
## The "/home/standard20000" below specifies your home
## directory -- the rest should be the directory you uploaded your Flask
## code to underneath the home directory.  So if you just ran
## "git clone git@github.com/myusername/myproject.git"
## ...or uploaded files to the directory "myproject", then you should
## specify "/home/standard20000/myproject"
#path = '/home/standard20000/path/to/flask_app_directory'
#if path not in sys.path:
#    sys.path.append(path)
#
#from main_flask_app_file import app as application  # noqa
#
# NB -- many Flask guides suggest you use a file called run.py; that's
# not necessary on PythonAnywhere.  And you should make sure your code
# does *not* invoke the flask development server with app.run(), as it
# will prevent your wsgi file from working.
